# Azure Pipelines configuration for @coa/goldfish-mcp
# Simple, clean approach - no unnecessary complexity

trigger:
  branches:
    include:
      - main
      - develop

pool:
  name: 'Default'  # Local Windows agent pool

variables:
  nodeVersion: '20.x'
  packageName: '@coa/goldfish-mcp'

stages:
  - stage: BuildTest
    displayName: 'Build and Test'
    jobs:
      - job: Build
        displayName: 'Build, Lint, and Test'
        steps:
          # Setup Node.js
          - task: NodeTool@0
            displayName: 'Install Node.js'
            inputs:
              versionSpec: $(nodeVersion)

          # Authenticate with Azure DevOps npm feed FIRST
          - task: npmAuthenticate@0
            displayName: 'Authenticate npm feed'
            inputs:
              workingFile: '.npmrc'

          # Install dependencies (with authentication now available)
          - script: npm ci
            displayName: 'Install dependencies'

          # Run linting
          - script: npm run lint
            displayName: 'Run linting'
            continueOnError: true

          # Build TypeScript
          - script: npm run build
            displayName: 'Build TypeScript'

          # Run tests with coverage
          - script: npm test -- --coverage
            displayName: 'Run tests with coverage'
            continueOnError: true

          # Publish test results
          - task: PublishTestResults@2
            displayName: 'Publish test results'
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: 'test-results.xml'
              failTaskOnFailedTests: false
            condition: always()

          # Publish code coverage
          - task: PublishCodeCoverageResults@2
            displayName: 'Publish code coverage'
            inputs:
              codeCoverageTool: 'Cobertura'
              summaryFileLocation: 'coverage/cobertura-coverage.xml'
              failIfCoverageEmpty: false
            condition: always()

  - stage: Publish
    displayName: 'Publish Package'
    dependsOn: BuildTest
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - job: PublishPackage
        displayName: 'Publish to npm feed'
        steps:
          # Setup Node.js
          - task: NodeTool@0
            displayName: 'Install Node.js'
            inputs:
              versionSpec: $(nodeVersion)

          # Authenticate with Azure DevOps npm feed FIRST
          - task: npmAuthenticate@0
            displayName: 'Authenticate npm feed'
            inputs:
              workingFile: '.npmrc'

          # Install dependencies (with authentication now available)
          - script: npm ci
            displayName: 'Install dependencies'

          # Build for publishing
          - script: npm run build
            displayName: 'Build for publish'

          # Bump version and publish
          - powershell: |
              # Get current version
              $currentVersion = node -p "require('./package.json').version"
              Write-Host "Current version: $currentVersion"
              
              # Parse version components
              $versionParts = $currentVersion.Split('.')
              $major = [int]$versionParts[0]
              $minor = [int]$versionParts[1]
              $patch = [int]$versionParts[2]
              
              # Increment patch version
              $newPatch = $patch + 1
              $newVersion = "$major.$minor.$newPatch"
              
              Write-Host "Publishing version: $newVersion"
              
              # Update version in package.json
              npm version $newVersion --no-git-tag-version
              
              # Publish to feed
              npm publish --registry https://pkgs.dev.azure.com/childrensal/_packaging/COA-NPM-Packages/npm/registry/
              
            displayName: 'Version and publish'
            
          # Save build artifacts
          - task: PublishBuildArtifacts@1
            displayName: 'Publish build artifacts'
            inputs:
              pathToPublish: 'dist'
              artifactName: 'dist'